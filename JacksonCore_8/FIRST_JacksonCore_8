package com.fasterxml.jackson.core.util;

import junit.framework.TestCase;
import com.fasterxml.jackson.core.util.TextBuffer;

public class TestTextBuffer extends TestCase {

    private TextBuffer textBuffer;

    protected void setUp() {
        textBuffer = new TextBuffer(null);
    }

    public void testGetTextBufferWithInputStart() {
        textBuffer.resetWithShared(new char[]{'a', 'b', 'c'}, 0, 3);
        assertEquals('a', textBuffer.getTextBuffer()[0]);
        assertEquals('b', textBuffer.getTextBuffer()[1]);
        assertEquals('c', textBuffer.getTextBuffer()[2]);
    }

    public void testGetTextBufferWithResultArray() {
        textBuffer.resetWithCopy(new char[]{'d', 'e', 'f'}, 0, 3);
        assertEquals('d', textBuffer.getTextBuffer()[0]);
        assertEquals('e', textBuffer.getTextBuffer()[1]);
        assertEquals('f', textBuffer.getTextBuffer()[2]);
    }

    public void testGetTextBufferWithResultString() {
        textBuffer.resetWithString("ghi");
        assertEquals('g', textBuffer.getTextBuffer()[0]);
        assertEquals('h', textBuffer.getTextBuffer()[1]);
        assertEquals('i', textBuffer.getTextBuffer()[2]);
    }

    public void testGetTextBufferWithCurrentSegment() {
        textBuffer.resetWithEmpty();
        textBuffer.append('j', 'k', 'l');
        assertEquals('j', textBuffer.getTextBuffer()[0]);
        assertEquals('k', textBuffer.getTextBuffer()[1]);
        assertEquals('l', textBuffer.getTextBuffer()[2]);
    }

    public void testGetTextBufferWithContentsAsArray() {
        textBuffer.resetWithEmpty();
        textBuffer.append('m');
        textBuffer.append('n');
        textBuffer.append('o');
        assertEquals('m', textBuffer.getTextBuffer()[0]);
        assertEquals('n', textBuffer.getTextBuffer()[1]);
        assertEquals('o', textBuffer.getTextBuffer()[2]);
    }
}